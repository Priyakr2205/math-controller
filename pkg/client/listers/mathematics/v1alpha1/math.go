/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "math-controller/pkg/apis/mathematics/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MathLister helps list Maths.
// All objects returned here must be treated as read-only.
type MathLister interface {
	// List lists all Maths in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Math, err error)
	// Maths returns an object that can list and get Maths.
	Maths(namespace string) MathNamespaceLister
	MathListerExpansion
}

// mathLister implements the MathLister interface.
type mathLister struct {
	indexer cache.Indexer
}

// NewMathLister returns a new MathLister.
func NewMathLister(indexer cache.Indexer) MathLister {
	return &mathLister{indexer: indexer}
}

// List lists all Maths in the indexer.
func (s *mathLister) List(selector labels.Selector) (ret []*v1alpha1.Math, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Math))
	})
	return ret, err
}

// Maths returns an object that can list and get Maths.
func (s *mathLister) Maths(namespace string) MathNamespaceLister {
	return mathNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MathNamespaceLister helps list and get Maths.
// All objects returned here must be treated as read-only.
type MathNamespaceLister interface {
	// List lists all Maths in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Math, err error)
	// Get retrieves the Math from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Math, error)
	MathNamespaceListerExpansion
}

// mathNamespaceLister implements the MathNamespaceLister
// interface.
type mathNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Maths in the indexer for a given namespace.
func (s mathNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Math, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Math))
	})
	return ret, err
}

// Get retrieves the Math from the indexer for a given namespace and name.
func (s mathNamespaceLister) Get(name string) (*v1alpha1.Math, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("math"), name)
	}
	return obj.(*v1alpha1.Math), nil
}
